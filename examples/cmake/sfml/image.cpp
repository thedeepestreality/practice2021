#include <SFML/Graphics.hpp>
#include <iostream>

int main(){
	size_t const WIDTH = 10;
	size_t const HEIGHT = 10;
	sf::Uint8 raw_pixels[4*WIDTH*HEIGHT] = {
		255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255,
		0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255,
		0,0,0,255, 255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255, 0,0,0,255,
		255,255,255,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 0,0,0,255, 255,255,255,255
	};
	
    // Create main window
    sf::RenderWindow window(sf::VideoMode(WIDTH, HEIGHT), "SFML Graphics");
	// Buffer
	sf::Image image;
	image.create(WIDTH, HEIGHT, sf::Color(0, 0, 0));
	// Sprite buffer
	sf::Texture texture;
	texture.create(WIDTH, HEIGHT);
	sf::Sprite sprite(texture);
	window.clear();
    // Start game loop
    while (window.isOpen()){
        // Process events
        sf::Event Event;
        while (window.pollEvent(Event)){
            // Close window : exit
            if (Event.type == sf::Event::Closed)
                window.close();
        }
		
		texture.update(raw_pixels);
		window.draw(sprite);
        // Finally, display the rendered frame on screen
        window.display();
    }

    return EXIT_SUCCESS;
}